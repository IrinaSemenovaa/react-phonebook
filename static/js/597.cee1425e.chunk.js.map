{"version":3,"file":"static/js/597.cee1425e.chunk.js","mappings":"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","sources":["Redux/contacts/contacts-selectors.js","components/ContactForm/ContactFormStyles.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","components/ContactList/ContactListStyles.js","components/ContactList/ContactList.js","components/SearchBar/SearchBarStyles.js","components/SearchBar/SearchBar.js","Page/ContactsPage.js"],"sourcesContent":["export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectorIsLoading = state => state.contacts.isLoading;\nexport const selectorError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const LabelStyles = styled.label`\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const ButtonAdd = styled.button`\n  font-size: 14px;\n  padding: 8px 16px;\n  background-color: #1b5bb5;\n\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 110px;\n  margin: 0 auto;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #043f91;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__TWEE2\",\"inputStyles\":\"ContactForm_inputStyles__gsdVP\",\"imageContainer\":\"ContactForm_imageContainer__zouN+\",\"image\":\"ContactForm_image__ObYeZ\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, useFormik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'Redux/contacts/contacts-operations';\nimport { selectContacts } from 'Redux/contacts/contacts-selectors';\nimport { ButtonAdd, LabelStyles} from './ContactFormStyles';\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm({ inputStyles, formContainer }) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      const { name, number } = values;\n\n      const isDuplicate = contacts.some(\n        contact => contact.name === name || contact.number === number\n      );\n\n      if (isDuplicate) {\n        return alert('Duplicate contact');\n      }\n\n      dispatch(addContact({ name, number }));\n      resetForm();\n    },\n  });\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={formik.handleSubmit}\n      >\n        <Form className={css.formContainer}>\n          <LabelStyles htmlFor={nameInputId}>\n            Name\n            <Field\n              id={nameInputId}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              placeholder=\"e.g. John Doe\"\n              className={css.inputStyles}\n            />\n          </LabelStyles>\n          <LabelStyles htmlFor={numberInputId}>\n            Number\n            <Field\n              id={numberInputId}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={formik.handleChange}\n              value={formik.values.number}\n              placeholder=\"e.g. +123456789\"\n              className={css.inputStyles}\n            />\n          </LabelStyles>\n          <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ContactsListContainer = styled.div`\n  width: 360px;\n  margin: 40px auto 0 auto;\n`;\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #fff;\n\n  &:not(:last-child) {\n    margin-bottom: 13px;\n  }\n`;\n\nexport const NameContainer = styled.div`\n  flex: 1;\n  margin-right: 10px;\n`;\n\nexport const NameStyled = styled.span`\n  font-weight: bold;\n`;\n\nexport const NumberContainer = styled.div`\n  flex: 1;\n  margin-right: 10px;\n`;\n\nexport const ButtonDelete = styled.button`\n  padding: 6px 10px;\n  background-color: #b31e30;\n\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover,\n  &:focus {\n    background-color: #8c0818;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'Redux/contacts/contacts-operations';\nimport {\n  selectFilter,\n  selectContacts,\n} from 'Redux/contacts/contacts-selectors';\nimport {\n  ButtonDelete,\n  ContactsItem,\n  ContactsList,\n  ContactsListContainer,\n  NameContainer,\n  NameStyled,\n  NumberContainer,\n} from './ContactListStyles';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ContactsListContainer>\n      <ContactsList>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactsItem key={id}>\n            <NameContainer>\n              <NameStyled>{name}:</NameStyled>\n            </NameContainer>\n            <NumberContainer>\n              <span>{number}</span>\n            </NumberContainer>\n            <ButtonDelete\n              onClick={() => dispatch(deleteContact(id))}\n              type=\"button\"\n            >\n              Delete\n            </ButtonDelete>\n          </ContactsItem>\n        ))}\n      </ContactsList>\n    </ContactsListContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const SerchBarContainer = styled.div`\n  display: grid;\n  margin: 30px auto 0 auto;\n`;\n\nexport const SearchInputStyles = styled.input`\n  padding: 8px;\n  margin: 0 auto;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  width: 360px;\n  height: 40px;\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'Redux/contacts/filter-slice';\nimport { selectFilter } from 'Redux/contacts/contacts-selectors';\nimport { SearchInputStyles, SerchBarContainer } from './SearchBarStyles';\n\nexport default function SearchBar() {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    const filterValue = e.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <SerchBarContainer>\n      <h2>Contacts</h2>\n      <SearchInputStyles\n        type=\"text\"\n        onChange={handleFilterChange}\n        value={filter}\n      />\n    </SerchBarContainer>\n  );\n}\n","import { fetchContacts } from 'Redux/contacts/contacts-operations';\nimport { MainFormContainer } from 'components/AppStyles';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <MainFormContainer>\n        <ContactForm />\n        <SearchBar />\n        <ContactList />\n      </MainFormContainer>\n    </div>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","LabelStyles","styled","ButtonAdd","ContactForm","inputStyles","formContainer","dispatch","useDispatch","useSelector","nameInputId","nanoid","numberInputId","formik","useFormik","initialValues","name","number","onSubmit","values","resetForm","some","contact","alert","addContact","handleSubmit","className","css","htmlFor","id","type","pattern","title","required","onChange","handleChange","value","placeholder","ContactsListContainer","ContactsList","ContactsItem","NameContainer","NameStyled","NumberContainer","ButtonDelete","ContactList","filteredContacts","toLowerCase","includes","map","onClick","deleteContact","SerchBarContainer","SearchInputStyles","SearchBar","e","filterValue","target","setFilter","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}